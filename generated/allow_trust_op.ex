defmodule StellarBase.XDR.AllowTrustOp do
  @moduledoc """
  Automatically generated by xdrgen
  DO NOT EDIT or your changes may be overwritten

  Target implementation: elixir_xdr at https://hex.pm/packages/elixir_xdr

  Representation of Stellar `AllowTrustOp` type.
  """

  @behaviour XDR.Declaration

  alias StellarBase.XDR.{
    AccountID,
    AssetCode,
    Uint32
  }

  @struct_spec XDR.Struct.new(
    trustor: AccountID,
    asset: AssetCode,
    authorize: Uint32
  )

  @type trustor_type :: AccountID.t()
  @type asset_type :: AssetCode.t()
  @type authorize_type :: Uint32.t()

  @type t :: %__MODULE__{trustor: trustor_type(), asset: asset_type(), authorize: authorize_type()}

  defstruct [:trustor, :asset, :authorize]

  @spec new(trustor :: trustor_type(), asset :: asset_type(), authorize :: authorize_type()) :: t()
  def new(
    %AccountID{} = trustor,
    %AssetCode{} = asset,
    %Uint32{} = authorize
  ),
  do: %__MODULE__{trustor: trustor, asset: asset, authorize: authorize}

  @impl true
  def encode_xdr(%__MODULE__{trustor: trustor, asset: asset, authorize: authorize}) do
    [trustor: trustor, asset: asset, authorize: authorize]
    |> XDR.Struct.new()
    |> XDR.Struct.encode_xdr()
  end

  @impl true
  def encode_xdr!(%__MODULE__{trustor: trustor, asset: asset, authorize: authorize}) do
    [trustor: trustor, asset: asset, authorize: authorize]
    |> XDR.Struct.new()
    |> XDR.Struct.encode_xdr!()
  end

  @impl true
  def decode_xdr(bytes, struct \\ @struct_spec)

  def decode_xdr(bytes, struct) do
    case XDR.Struct.decode_xdr(bytes, struct) do
      {:ok, {%XDR.Struct{components: [trustor: trustor, asset: asset, authorize: authorize]}, rest}} ->
        {:ok, {new(trustor, asset, authorize), rest}}
      error -> error
    end
  end

  @impl true
  def decode_xdr!(bytes, struct \\ @struct_spec)

  def decode_xdr!(bytes, struct) do
    {%XDR.Struct{components: [trustor: trustor, asset: asset, authorize: authorize]}, rest} =
      XDR.Struct.decode_xdr!(bytes, struct)
    {new(trustor, asset, authorize), rest}
  end
end
