defmodule StellarBase.XDR.TimePoint do
  @moduledoc """
  Automatically generated by xdrgen
  DO NOT EDIT or your changes may be overwritten

  Target implementation: elixir_xdr at https://hex.pm/packages/elixir_xdr

  Representation of Stellar `TimePoint` type.
  """

  @behaviour XDR.Declaration

  alias StellarBase.XDR.Uint64

  @type t :: %__MODULE__{time_point: Uint64.t()}

  defstruct [:time_point]

  @spec new(time_point :: Uint64.t()) :: t()
  def new(%Uint64{} = time_point), do: %__MODULE__{time_point: time_point}

  @impl true
  def encode_xdr(%__MODULE__{time_point: time_point}) do
    Uint64.encode_xdr(time_point)
  end

  @impl true
  def encode_xdr!(%__MODULE__{time_point: time_point}) do
    Uint64.encode_xdr!(time_point)
  end

  @impl true
  def decode_xdr(bytes, term \\ nil)

  def decode_xdr(bytes, _term) do
    case Uint64.decode_xdr(bytes) do
      {:ok, {%Uint64{} = time_point, rest}} -> {:ok, {new(time_point), rest}}
      error -> error
    end
  end

  @impl true
  def decode_xdr!(bytes, term \\ nil)

  def decode_xdr!(bytes, _term) do
    {%Uint64{} = time_point, rest} = Uint64.decode_xdr!(bytes)
    {new(time_point), rest}
  end
end
