defmodule StellarBase.XDR.SCPHistoryEntryV0 do
  @moduledoc """
  Automatically generated by xdrgen
  DO NOT EDIT or your changes may be overwritten

  Target implementation: elixir_xdr at https://hex.pm/packages/elixir_xdr

  Representation of Stellar `SCPHistoryEntryV0` type.
  """

  @behaviour XDR.Declaration

  alias StellarBase.XDR.{
    SCPQuorumSetList,
    LedgerSCPMessages
  }

  @struct_spec XDR.Struct.new(
    quorum_sets: SCPQuorumSetList,
    ledger_messages: LedgerSCPMessages
  )

  @type quorum_sets_type :: SCPQuorumSetList.t()
  @type ledger_messages_type :: LedgerSCPMessages.t()

  @type t :: %__MODULE__{quorum_sets: quorum_sets_type(), ledger_messages: ledger_messages_type()}

  defstruct [:quorum_sets, :ledger_messages]

  @spec new(quorum_sets :: quorum_sets_type(), ledger_messages :: ledger_messages_type()) :: t()
  def new(
    %SCPQuorumSetList{} = quorum_sets,
    %LedgerSCPMessages{} = ledger_messages
  ),
  do: %__MODULE__{quorum_sets: quorum_sets, ledger_messages: ledger_messages}

  @impl true
  def encode_xdr(%__MODULE__{quorum_sets: quorum_sets, ledger_messages: ledger_messages}) do
    [quorum_sets: quorum_sets, ledger_messages: ledger_messages]
    |> XDR.Struct.new()
    |> XDR.Struct.encode_xdr()
  end

  @impl true
  def encode_xdr!(%__MODULE__{quorum_sets: quorum_sets, ledger_messages: ledger_messages}) do
    [quorum_sets: quorum_sets, ledger_messages: ledger_messages]
    |> XDR.Struct.new()
    |> XDR.Struct.encode_xdr!()
  end

  @impl true
  def decode_xdr(bytes, struct \\ @struct_spec)

  def decode_xdr(bytes, struct) do
    case XDR.Struct.decode_xdr(bytes, struct) do
      {:ok, {%XDR.Struct{components: [quorum_sets: quorum_sets, ledger_messages: ledger_messages]}, rest}} ->
        {:ok, {new(quorum_sets, ledger_messages), rest}}
      error -> error
    end
  end

  @impl true
  def decode_xdr!(bytes, struct \\ @struct_spec)

  def decode_xdr!(bytes, struct) do
    {%XDR.Struct{components: [quorum_sets: quorum_sets, ledger_messages: ledger_messages]}, rest} =
      XDR.Struct.decode_xdr!(bytes, struct)
    {new(quorum_sets, ledger_messages), rest}
  end
end
